/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Andrew Unsworth
*/

import javax.swing.*;

public class CMASGUI extends javax.swing.JFrame {

    /**
     * Creates new form CMASGUI
     */
    public CMASGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        introLabel = new javax.swing.JLabel();
        labelTPs = new javax.swing.JLabel();
        textTPs = new javax.swing.JTextField();
        labelFNs = new javax.swing.JLabel();
        textFNs = new javax.swing.JTextField();
        labelFPs = new javax.swing.JLabel();
        textFPs = new javax.swing.JTextField();
        labelTNs = new javax.swing.JLabel();
        textTNs = new javax.swing.JTextField();
        exec = new javax.swing.JButton();
        labelSensi = new javax.swing.JLabel();
        labelSpeci = new javax.swing.JLabel();
        labelPreci = new javax.swing.JLabel();
        labelRecal = new javax.swing.JLabel();
        labelfMeas = new javax.swing.JLabel();
        labelOvAcc = new javax.swing.JLabel();
        labelOvErr = new javax.swing.JLabel();
        labelCoKap = new javax.swing.JLabel();
        textSensi = new javax.swing.JTextField();
        textSpeci = new javax.swing.JTextField();
        textPreci = new javax.swing.JTextField();
        textRecal = new javax.swing.JTextField();
        textfMeas = new javax.swing.JTextField();
        textOvAcc = new javax.swing.JTextField();
        textOvErr = new javax.swing.JTextField();
        textCoKap = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Classification accuracy statistics");
        setBackground(new java.awt.Color(255, 255, 255));

        introLabel.setText("Please enter the confusion matrix data in the textfields below.");

        labelTPs.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTPs.setText("True Positives:");

        labelFNs.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelFNs.setText("False Negatives");

        labelFPs.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelFPs.setText("False Positives");

        labelTNs.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelTNs.setText("True Negatives");

        exec.setText("Calculate Stats");
        exec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                execActionPerformed(evt);
            }
        });

        labelSensi.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelSensi.setText("Sensitivity");

        labelSpeci.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelSpeci.setText("Specificity");

        labelPreci.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPreci.setText("Precision");

        labelRecal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelRecal.setText("Recall");

        labelfMeas.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelfMeas.setText("F-measure");

        labelOvAcc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelOvAcc.setText("Overall Accuracy");

        labelOvErr.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelOvErr.setText("Overall Error");

        labelCoKap.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCoKap.setText("Cohen's Kappa");

        textCoKap.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(introLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(exec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTPs, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelFNs, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelFPs, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelTNs, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textTPs)
                            .addComponent(textFNs)
                            .addComponent(textFPs, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textTNs))))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelSensi, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelSpeci, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelPreci, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelRecal, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelfMeas, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelOvAcc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelOvErr, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelCoKap, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textCoKap, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOvErr, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOvAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfMeas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textRecal, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPreci, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textSpeci, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textSensi, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {textCoKap, textOvAcc, textOvErr, textPreci, textRecal, textSensi, textSpeci, textfMeas});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {labelCoKap, labelOvAcc, labelOvErr, labelPreci, labelRecal, labelSensi, labelSpeci, labelfMeas});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(introLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textTPs)
                    .addComponent(labelTPs)
                    .addComponent(labelSensi)
                    .addComponent(textSensi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFNs)
                    .addComponent(labelFNs)
                    .addComponent(labelSpeci)
                    .addComponent(textSpeci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFPs)
                    .addComponent(textFPs)
                    .addComponent(labelPreci)
                    .addComponent(textPreci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTNs)
                    .addComponent(textTNs)
                    .addComponent(labelRecal)
                    .addComponent(textRecal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exec))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelfMeas)
                            .addComponent(textfMeas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelOvAcc)
                            .addComponent(textOvAcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelOvErr)
                    .addComponent(textOvErr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCoKap)
                    .addComponent(textCoKap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {labelCoKap, labelOvAcc, labelOvErr, labelPreci, labelRecal, labelSensi, labelSpeci, labelfMeas});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {textCoKap, textOvAcc, textOvErr, textPreci, textRecal, textSensi, textSpeci, textfMeas});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void execActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_execActionPerformed
        // TODO add your handling code here:
        String action =  evt.getActionCommand();
		System.out.println("Event: " + action);
		
		if(evt.getActionCommand().equals("Calculate Stats")) {
			System.out.println("You pressed the button.");
			System.out.println("-----------------------");
			System.out.println("True positives: " + textTPs.getText());
			System.out.println("False negatives: " + textFNs.getText());
			System.out.println("False Positives: " + textFPs.getText());
			System.out.println("True negatives: " + textTNs.getText());
			
                        String tempTP = new String(textTPs.getText());
                        String tempFN = new String(textFNs.getText());
                        String tempFP = new String(textFPs.getText());
                        String tempTN = new String(textTNs.getText());
                        
                                                                     
                        // check that the user has entered something and that it's a positive integer
                        if(tempTP.isBlank() || tempFN.isBlank()|| tempFP.isBlank() || tempTN.isBlank()) {
                            System.out.println("Please make sure there's data in all the textfields before clicking the button.");
                            JOptionPane.showMessageDialog(messager, "Please make sure there's data in all the textfields before clicking the button.");
                        } else {
                                populateOutputFields();
                        }
    }//GEN-LAST:event_execActionPerformed
    }
    private void populateOutputFields() {
        // convert textfield strings to ints for use with CMAS
		truePositives = new Integer(Integer.parseInt(textTPs.getText()));
		falseNegatives = new Integer(Integer.parseInt(textFNs.getText()));
		falsePositives = new Integer(Integer.parseInt(textFPs.getText()));
		trueNegatives = new Integer(Integer.parseInt(textTNs.getText()));
		
		System.out.println("\n-----------------------\nIn populatTable()");
		System.out.println("True positives == " + truePositives);
		System.out.println("False negatives == " + falseNegatives);
		System.out.println("False positives == " + falsePositives);
		System.out.println("True negatives == " + trueNegatives);
		
		// Instantiate CMAS
		cMAS = new CMAS(truePositives, falseNegatives, falsePositives, trueNegatives);
		
		sensitivity = cMAS.sensitivityCalc();
		specificity = cMAS.specificityCalc();
		precision = cMAS.precisionCalc();
		recall = cMAS.recallCalc();
		fMeasure = cMAS.fMeasureCalc();
		overallAccuracy = cMAS.overallAccuracyCalc();
		overallError = cMAS.overallErrorCalc();
		cohensKappa = cMAS.cohensKappaCalc();
		
		// convert the doubles to Strings for export to output textfields
		String strSensi = new String(String.format("%.3f", sensitivity));
		String strSpeci = new String(String.format("%.3f", specificity));
		String strPreci = new String(String.format("%.3f", precision));
		String strRecal = new String(String.format("%.3f", recall));
		String strfMeas = new String(String.format("%.3f", fMeasure));
		String strOvAcc = new String(String.format("%.3f", overallAccuracy));
		String strOvErr = new String(String.format("%.3f", overallError));
		String strCoKap = new String(String.format("%.3f", cohensKappa));
		
		// set data of output text fields
		textSensi.setText(strSensi);
		textSpeci.setText(strSpeci);
		textPreci.setText(strPreci);
		textRecal.setText(strRecal);
		textfMeas.setText(strfMeas);
		textOvAcc.setText(strOvAcc);
		textOvErr.setText(strOvErr);
		textCoKap.setText(strCoKap);
		
	}
                
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CMASGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CMASGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CMASGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CMASGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CMASGUI().setVisible(true);
            }
        });
    }

    
    private JFrame messager;
    // Declare CMAS
    private CMAS cMAS;
    
    // declare the confusion matrix variables 
	private int truePositives = 0;
	private int falseNegatives = 0;
	private int falsePositives = 0;
	private int trueNegatives = 0;
	private int totalSample = 0;
	
	// declare the classification accuracy stats
	private double sensitivity = 0;
	private double specificity = 0;
	private double precision = 0;
	private double recall = 0;
	private double fMeasure = 0;
	private double overallAccuracy = 0;
	private double overallError = 0;
	private double cohensKappa = 0;
	private double randomGuess = 0;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exec;
    private javax.swing.JLabel introLabel;
    private javax.swing.JLabel labelCoKap;
    private javax.swing.JLabel labelFNs;
    private javax.swing.JLabel labelFPs;
    private javax.swing.JLabel labelOvAcc;
    private javax.swing.JLabel labelOvErr;
    private javax.swing.JLabel labelPreci;
    private javax.swing.JLabel labelRecal;
    private javax.swing.JLabel labelSensi;
    private javax.swing.JLabel labelSpeci;
    private javax.swing.JLabel labelTNs;
    private javax.swing.JLabel labelTPs;
    private javax.swing.JLabel labelfMeas;
    private javax.swing.JTextField textCoKap;
    private javax.swing.JTextField textFNs;
    private javax.swing.JTextField textFPs;
    private javax.swing.JTextField textOvAcc;
    private javax.swing.JTextField textOvErr;
    private javax.swing.JTextField textPreci;
    private javax.swing.JTextField textRecal;
    private javax.swing.JTextField textSensi;
    private javax.swing.JTextField textSpeci;
    private javax.swing.JTextField textTNs;
    private javax.swing.JTextField textTPs;
    private javax.swing.JTextField textfMeas;
    // End of variables declaration//GEN-END:variables
}
